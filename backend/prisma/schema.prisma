generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model People {
  id        Int          @id @default(autoincrement())
  firstName String
  lastName  String
  email     String       @unique
  password  String
  phone     String
  address   String
  zipcode   String
  role      String
  applications Application[] // Relation One-to-Many avec Application
}

model Company {
  id           Int            @id @default(autoincrement())
  name         String
  industry     String
  location     String
  website      String?
  contactEmail String
  advertisements Advertisements[] // Relation One-to-Many avec Advertisements
}

model Advertisements {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  details     String
  location    String
  salary      String
  benefits    String
  hours       String
  contactEmail String
  applications Application[] // Relation One-to-Many avec Application
  companyId   Int?     // Clé étrangère pour l'entreprise
  Company     Company?      @relation(fields: [companyId], references: [id]) // Relation un-à-plusieurs
}

model Application {
  id              Int          @id @default(autoincrement())
  jobId           Int          // Clé étrangère vers la table Advertisements
  applicantId     Int?          // Clé étrangère vers la table People
  applicationDate DateTime     @default(now()) // Date de la candidature
  message         String
  state           String       @default("en attente")// Statut de la candidature (ex: "en attente", "acceptée", "rejetée")


  // Relations
  advertisement   Advertisements @relation(fields: [jobId], references: [id])
  applicant       People?         @relation(fields: [applicantId], references: [id])
  // D'autres champs pour stocker les informations temporaires d'un utilisateur non enregistré
  guestName       String?  // Nom du candidat invité
  guestEmail      String?  // Email du candidat invité
}
